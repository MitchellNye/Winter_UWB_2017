Script started on Fri 26 Jan 2018 04:45:34 AM PST
bash: /home/NETID/rcpeters/.bash_it/bash_it.sh: No such file or directory
rcpeters@uw1-320-03:~/GitHub_remotes/Winter_UWB_2017/343_data-structures_n_algos/ass2_BST_Program/BST$ g++ -std=c++14 -g -O1 -Wall -Wextra ass2.cpp -o grindAss2
rcpeters@uw1-320-03:~/GitHub_remotes/Winter_UWB_2017/343_data-structures_n_algos/ass2_BST_Program/BST$ ./ [KgrindAss2 
OK: bst1 != bst2
OK: bst1 == bst2
OK: bst1 contains d
OK: bst1 does not contain x
OK: adding g second time returns false
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 6
Please enter the name of the input file to use.
The name should have no spaces and the file type should be .txt 

eg., "many-int-test.txt"
>> alphabet_test_string.txt
Added a
Added b
Added c
Added d
Added e
Added f
Added g
Added h
Added i
Added j
Added k
Added l
Added m
Added n
Added o
Added p
Added q
Added r
Added s
Added t
Added u
Added v
Added w
Added x
Added y
Added z
                                                                                                            z
                                                                                                        y
                                                                                                    x
                                                                                                w
                                                                                            v
                                                                                        u
                                                                                    t
                                                                                s
                                                                            r
                                                                        q
                                                                    p
                                                                o
                                                            n
                                                        m
                                                    l
                                                k
                                            j
                                        i
                                    h
                                g
                            f
                        e
                    d
                c
            b
        a
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 9
OK: bst == *bstPtr
OK: bst == bstPtr
printing bstPtr
a b c d e f g h i j k l m n o p q r s t u v w x y z 
delete(bstPtr);
	Did it work?
	Height: 0
	Number of nodes: 0
now to print bst to confirm it is unchanged
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 7
        
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 4
Height: 0
Number of nodes: 0
        
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 10
rcpeters@uw1-320-03:~/GitHub_remotes/Winter_UWB_2017/343_data-structures_n_algos/ass2_BST_Program/BST$ valgrind --leak-check=full --show-leak-kinds=all ./grindAss2
==4683== Memcheck, a memory error detector
==4683== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4683== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4683== Command: ./grindAss2
==4683== 
OK: bst1 != bst2
OK: bst1 == bst2
OK: bst1 contains d
OK: bst1 does not contain x
OK: adding g second time returns false
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 6
Please enter the name of the input file to use.
The name should have no spaces and the file type should be .txt 

eg., "many-int-test.txt"
>> alphabet_test_string.txt
Added a
Added b
Added c
Added d
Added e
Added f
Added g
Added h
Added i
Added j
Added k
Added l
Added m
Added n
Added o
Added p
Added q
Added r
Added s
Added t
Added u
Added v
Added w
Added x
Added y
Added z
                                                                                                            z
                                                                                                        y
                                                                                                    x
                                                                                                w
                                                                                            v
                                                                                        u
                                                                                    t
                                                                                s
                                                                            r
                                                                        q
                                                                    p
                                                                o
                                                            n
                                                        m
                                                    l
                                                k
                                            j
                                        i
                                    h
                                g
                            f
                        e
                    d
                c
            b
        a
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 9
OK: bst == *bstPtr
OK: bst == bstPtr
printing bstPtr
a b c d e f g h i j k l m n o p q r s t u v w x y z 
==4683== Invalid read of size 4
==4683==    at 0x4037E0: getHeight (binarysearchtree.cpp:99)
==4683==    by 0x4037E0: treeMenuString() (ass2.cpp:161)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683==  Address 0x5ac04c0 is 16 bytes inside a block of size 24 free'd
==4683==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x404D27: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (binarysearchtree.cpp:22)
==4683==    by 0x4037DF: treeMenuString() (ass2.cpp:159)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683==  Block was alloc'd at
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x4035C9: treeMenuString() (ass2.cpp:153)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683== 
delete(bstPtr);
	Did it work?
	Height: 0
==4683== Invalid read of size 4
==4683==    at 0x40386F: getNumberOfNodes (binarysearchtree.cpp:106)
==4683==    by 0x40386F: treeMenuString() (ass2.cpp:162)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683==  Address 0x5ac04c4 is 20 bytes inside a block of size 24 free'd
==4683==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x404D27: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (binarysearchtree.cpp:22)
==4683==    by 0x4037DF: treeMenuString() (ass2.cpp:159)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683==  Block was alloc'd at
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x4035C9: treeMenuString() (ass2.cpp:153)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683== 
	Number of nodes: 0
now to print bst to confirm it is unchanged
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 2
Enter a string: o
Found o
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 2
Enter a string: 1
Not Found 1
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 2
Enter a string: l
Found l
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 8
Please enter the name of the input file to use.
The name should have no spaces and the file type should be .txt 

eg., "many-int-test.txt"
>> ordered_str_test.txt
==4683== Invalid read of size 8
==4683==    at 0x4F5936E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==4683==    by 0x405C9B: assign (basic_string.h:1095)
==4683==    by 0x405C9B: operator= (basic_string.h:551)
==4683==    by 0x405C9B: setItem (binarynode.cpp:60)
==4683==    by 0x405C9B: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (binarysearchtree.cpp:114)
==4683==    by 0x40600D: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::buildBalancedTree(int const&, int const&, int const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*) (binarysearchtree.cpp:320)
==4683==    by 0x4034A8: readTree (binarysearchtree.cpp:332)
==4683==    by 0x4034A8: treeMenuString() (ass2.cpp:140)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==4683== 
==4683== 
==4683== Process terminating with default action of signal 11 (SIGSEGV)
==4683==  Access not within mapped region at address 0x8
==4683==    at 0x4F5936E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==4683==    by 0x405C9B: assign (basic_string.h:1095)
==4683==    by 0x405C9B: operator= (basic_string.h:551)
==4683==    by 0x405C9B: setItem (binarynode.cpp:60)
==4683==    by 0x405C9B: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (binarysearchtree.cpp:114)
==4683==    by 0x40600D: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::buildBalancedTree(int const&, int const&, int const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*) (binarysearchtree.cpp:320)
==4683==    by 0x4034A8: readTree (binarysearchtree.cpp:332)
==4683==    by 0x4034A8: treeMenuString() (ass2.cpp:140)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683==  If you believe this happened as a result of a stack
==4683==  overflow in your program's main thread (unlikely but
==4683==  possible), you can try to increase the size of the
==4683==  main thread stack using the --main-stacksize= flag.
==4683==  The main thread stack size used in this run was 8388608.
==4683== 
==4683== HEAP SUMMARY:
==4683==     in use at exit: 73,290 bytes in 9 blocks
==4683==   total heap usage: 143 allocs, 134 frees, 117,042 bytes allocated
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 1 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x404A4C: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::BinarySearchTree() (binarysearchtree.cpp:11)
==4683==    by 0x403BFC: main (ass2.cpp:243)
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 2 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x404A4C: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::BinarySearchTree() (binarysearchtree.cpp:11)
==4683==    by 0x403C06: main (ass2.cpp:244)
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 3 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x405E36: operator() (binarysearchtree.cpp:142)
==4683==    by 0x405E36: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (binarysearchtree.cpp:149)
==4683==    by 0x403C60: main (ass2.cpp:246)
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 4 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x405D56: operator() (binarysearchtree.cpp:132)
==4683==    by 0x405D56: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (binarysearchtree.cpp:149)
==4683==    by 0x403CA0: main (ass2.cpp:247)
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 5 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x405E36: operator() (binarysearchtree.cpp:142)
==4683==    by 0x405E36: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (binarysearchtree.cpp:149)
==4683==    by 0x403D6C: main (ass2.cpp:250)
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 6 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x405D56: operator() (binarysearchtree.cpp:132)
==4683==    by 0x405D56: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (binarysearchtree.cpp:149)
==4683==    by 0x403DAF: main (ass2.cpp:251)
==4683== 
==4683== 56 bytes in 1 blocks are still reachable in loss record 7 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x404CB0: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::clear() (binarysearchtree.cpp:180)
==4683==    by 0x403444: treeMenuString() (ass2.cpp:138)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683== 
==4683== 194 bytes in 1 blocks are still reachable in loss record 8 of 9
==4683==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x40521F: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) (basic_string.tcc:223)
==4683==    by 0x402EE9: _M_construct_aux<char const*> (basic_string.h:195)
==4683==    by 0x402EE9: _M_construct<char const*> (basic_string.h:214)
==4683==    by 0x402EE9: basic_string (basic_string.h:456)
==4683==    by 0x402EE9: treeMenuString() (ass2.cpp:97)
==4683==    by 0x403F82: main (ass2.cpp:256)
==4683== 
==4683== 72,704 bytes in 1 blocks are still reachable in loss record 9 of 9
==4683==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4683==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==4683==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==4683==    by 0x40107CA: call_init (dl-init.c:30)
==4683==    by 0x40107CA: _dl_init (dl-init.c:120)
==4683==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==4683== 
==4683== LEAK SUMMARY:
==4683==    definitely lost: 0 bytes in 0 blocks
==4683==    indirectly lost: 0 bytes in 0 blocks
==4683==      possibly lost: 0 bytes in 0 blocks
==4683==    still reachable: 73,290 bytes in 9 blocks
==4683==         suppressed: 0 bytes in 0 blocks
==4683== 
==4683== For counts of detected and suppressed errors, rerun with: -v
==4683== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
rcpeters@uw1-320-03:~/GitHub_remotes/Winter_UWB_2017/343_data-structures_n_algos/ass2_BST_Program/BST$ This s[K[K[K[K[K[Kvalgrind --leak-check=full --show-leak-kinds=all ./grindAss2
==4733== Memcheck, a memory error detector
==4733== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4733== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4733== Command: ./grindAss2
==4733== 
OK: bst1 != bst2
OK: bst1 == bst2
OK: bst1 contains d
OK: bst1 does not contain x
OK: adding g second time returns false
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 6
Please enter the name of the input file to use.
The name should have no spaces and the file type should be .txt 

eg., "many-int-test.txt"
>> alphabet_test_string.txt
Added a
Added b
Added c
Added d
Added e
Added f
Added g
Added h
Added i
Added j
Added k
Added l
Added m
Added n
Added o
Added p
Added q
Added r
Added s
Added t
Added u
Added v
Added w
Added x
Added y
Added z
                                                                                                            z
                                                                                                        y
                                                                                                    x
                                                                                                w
                                                                                            v
                                                                                        u
                                                                                    t
                                                                                s
                                                                            r
                                                                        q
                                                                    p
                                                                o
                                                            n
                                                        m
                                                    l
                                                k
                                            j
                                        i
                                    h
                                g
                            f
                        e
                    d
                c
            b
        a
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 9
OK: bst == *bstPtr
OK: bst == bstPtr
printing bstPtr
a b c d e f g h i j k l m n o p q r s t u v w x y z 
==4733== Invalid read of size 4
==4733==    at 0x4037E0: getHeight (binarysearchtree.cpp:99)
==4733==    by 0x4037E0: treeMenuString() (ass2.cpp:161)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733==  Address 0x5ac04c0 is 16 bytes inside a block of size 24 free'd
==4733==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x404D27: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (binarysearchtree.cpp:22)
==4733==    by 0x4037DF: treeMenuString() (ass2.cpp:159)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733==  Block was alloc'd at
==4733==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x4035C9: treeMenuString() (ass2.cpp:153)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733== 
delete(bstPtr);
	Did it work?
	Height: 0
==4733== Invalid read of size 4
==4733==    at 0x40386F: getNumberOfNodes (binarysearchtree.cpp:106)
==4733==    by 0x40386F: treeMenuString() (ass2.cpp:162)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733==  Address 0x5ac04c4 is 20 bytes inside a block of size 24 free'd
==4733==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x404D27: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (binarysearchtree.cpp:22)
==4733==    by 0x4037DF: treeMenuString() (ass2.cpp:159)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733==  Block was alloc'd at
==4733==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x4035C9: treeMenuString() (ass2.cpp:153)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733== 
	Number of nodes: 0
now to print bst to confirm it is unchanged
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 10
==4733== 
==4733== HEAP SUMMARY:
==4733==     in use at exit: 72,704 bytes in 1 blocks
==4733==   total heap usage: 143 allocs, 142 frees, 108,435 bytes allocated
==4733== 
==4733== 72,704 bytes in 1 blocks are still reachable in loss record 1 of 1
==4733==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==4733==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==4733==    by 0x40107CA: call_init (dl-init.c:30)
==4733==    by 0x40107CA: _dl_init (dl-init.c:120)
==4733==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==4733== 
==4733== LEAK SUMMARY:
==4733==    definitely lost: 0 bytes in 0 blocks
==4733==    indirectly lost: 0 bytes in 0 blocks
==4733==      possibly lost: 0 bytes in 0 blocks
==4733==    still reachable: 72,704 bytes in 1 blocks
==4733==         suppressed: 0 bytes in 0 blocks
==4733== 
==4733== For counts of detected and suppressed errors, rerun with: -v
==4733== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
rcpeters@uw1-320-03:~/GitHub_remotes/Winter_UWB_2017/343_data-structures_n_algos/ass2_BST_Program/BST$ exit

Script done on Fri 26 Jan 2018 04:50:29 AM PST
ain (ass2.cpp:256)
==4733== 
delete(bstPtr);
	Did it work?
	Height: 0
==4733== Invalid read of size 4
==4733==    at 0x40386F: getNumberOfNodes (binarysearchtree.cpp:106)
==4733==    by 0x40386F: treeMenuString() (ass2.cpp:162)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733==  Address 0x5ac04c4 is 20 bytes inside a block of size 24 free'd
==4733==    at 0x4C2F24B: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x404D27: BinarySearchTree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~BinarySearchTree() (binarysearchtree.cpp:22)
==4733==    by 0x4037DF: treeMenuString() (ass2.cpp:159)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733==  Block was alloc'd at
==4733==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x4035C9: treeMenuString() (ass2.cpp:153)
==4733==    by 0x403F82: main (ass2.cpp:256)
==4733== 
	Number of nodes: 0
now to print bst to confirm it is unchanged
                        z
                    y
                        x
                w
                        v
                    u
            t
                        s
                    r
                        q
                p
                        o
                    n
        m
                        l
                    k
                        j
                i
                        h
                    g
            f
                        e
                    d
                c
                        b
                    a
treeMenuString
1. Add
2. Search
3. Inorder traverse
4. Height & Number of nodes
5. Rebalance
6. Add Multiple
7. Clear tree
8. Create tree from sorted array
9. Create duplicate tree
10. Exit
>> 10
==4733== 
==4733== HEAP SUMMARY:
==4733==     in use at exit: 72,704 bytes in 1 blocks
==4733==   total heap usage: 143 allocs, 142 frees, 108,435 bytes allocated
==4733== 
==4733== 72,704 bytes in 1 blocks are still reachable in loss record 1 of 1
==4733==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4733==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==4733==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==4733==    by 0x40107CA: call_init (dl-init.c:30)
==4733==    by 0x40107CA: _dl_init (dl-init.c:120)
==4733==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==4733== 
==4733== LEAK SUMMARY:
==4733==    definitely lost: 0 bytes in 0 blocks
==4733==    indirectly lost: 0 bytes in 0 blocks
==4733==      possibly lost: 0 bytes in 0 blocks
==4733==    still reachable: 72,704 bytes in 1 blocks
==4733==      